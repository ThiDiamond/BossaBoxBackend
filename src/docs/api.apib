FORMAT: 1A
HOST: http://api.sample.com.br/v1

# Backend API Challenge BossaBox


A simple API created to show my skills using NodeJS, Express, Mongoose, and additional features like CI/CD pipelines, JWT authentication, tests and Docker containers.


# Group API

## Sobre [/]

All routes are described below, but this API is basicaly abble to list, store, update and delete tools and users from database.
Only two endpoints are protected by JWT token (DELETE users/{id} - PUT users/{id}), this make sure the user should only can modify and delete his self data.

# Group Tools

## Tools [/tools]

### Create tool [POST]

+ Request Create a tool

    + Headers

            Accept: application/json
            Content-Type: application/json
    + Attributes (CreatedTool)

+ Response 201 (application/json)
    + Attributes (Tool)

### List all tools [GET]

+ Response 200 (application/json)
    + Attributes (array[CreatedTool])

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)


## Tool [/tools/{id}]

+ Parameters
    + id: 5ee8e6d0e24682149e927520 (string, required) - Tool ID

### List single tool [GET]

+ Response 200 (application/json)
    + Attributes (CreatedTool)

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)


### Delete tool [DELETE]

+ Response 204 (application/json)

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)


### Update tool [POST]

+ Request Update a tool

    + Headers

            Accept: application/json
            Content-Type: application/json
    + Attributes (Tool)

+ Response 201 (application/json)
    + Attributes (CreatedTool)

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)



# Group Users

## Users [/users]

### Create user [POST]

+ Request Create a user

    + Headers

            Accept: application/json
            Content-Type: application/json
    + Attributes (User)

+ Response 201 (application/json)
    + Attributes (CreatedUser)

### List all users [GET]

+ Response 200 (application/json)
    + Attributes (array[CreatedUser])

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)


## User [/users/{id}]

+ Parameters
    + id: 5ee8e6d0e24682149e927520 (string, required) - User ID

### List single user [GET]

+ Response 200 (application/json)
    + Attributes (CreatedUser)

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)




## Delete user PROTECTED [DELETE]

+ Request Delete a user

 + Headers

            Authentication: Bearer JWT

+ Response 204 (application/json)

+ Response 404 (application/json)
    + Attributes (ErrorNotFound)

+ Response 400 (application/json)
    + Attributes (ErrorUnauthorized)

+ Response 401 (application/json)
    + Attributes (ErrorToken)


## Update user PROTECTED [PUT]

+ Request Update a user

    + Headers

            Authentication: Bearer JWT
            Accept: application/json
            Content-Type: application/json
    + Attributes (User)

+ Response 201 (application/json)
    + Attributes (CreatedUser)


+ Response 404 (application/json)
    + Attributes (ErrorNotFound)

+ Response 400 (application/json)
    + Attributes (ErrorUnauthorized)


+ Response 401 (application/json)
    + Attributes (ErrorToken)


# Data Structures


## Tool (object)
+ title: hotel (string, required) - Tool title
+ link: https://github.com/typicode/hotel (string, required) - Tool link
+ description: Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.  (string, required) - Tool description
+ tags: node, organizing, webapps, domain, developer, https, proxy (array[string]) - Tool tags list


## CreatedTool (object)
+ title: hotel (string, required) - Tool title
+ link: https://github.com/typicode/hotel (string, required) - Tool link
+ description: Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.  (string, required) - Tool description
+ tags: node, organizing, webapps, domain, developer, https, proxy (array[string]) - Tool tags list
+ _id: 5ed92b9135d82d005398d624 (string) - Processed ID


## User (object)
+ username: MyUser (string, required) - User username
+ password: MyPassword (string, required) - User password
+ tools (array[string]) - Tools saved by user


## CreatedUser (object)
+ username (string) - User username
+ password (string) - User password
+ tools (array[string]) - IDs list of tools saved by the user
+ _id: 5ed92b9135d82d005398d624 (string) - Processed ID


## ErrorNotFound (object)
+ code: 404 (number) - Status code
+ message: Not Found (string) - Mensagem do status
+ description: Description of error here (string) - Descrição do status

## ErrorUnauthorized (object)
+ error: Unauthorized (string) - Error message

## ErrorToken (object)
+ error: Some token error here (string) - Error message




## OAuth grant request (object)
+ `grant_type`: `client_credentials` (string, required)

## OAuth jwt bearer grant request (object)
+ `grant_type`: `urn:ietf:params:oauth:grant-type:jwt-bearer` (string, required)
+ assertion: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required)

## OAuth valid response (object)
+ `access_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid JWT
+ scope: all (string, required) - scopes of current token
+ `expires_in`: 300 (number, required)
+ `token_type`: Bearer (string, required)
